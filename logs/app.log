{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T09:45:50.048Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T10:07:54.079Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T10:07:56.621Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T10:10:04.090Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T10:10:06.269Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:33:11.425Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:33:14.352Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:33:25.333Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:33:27.337Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:33:36.449Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:33:38.599Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:34:15.271Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:34:17.879Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:35:59.280Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:36:01.479Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:36:21.356Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:36:23.333Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:36:32.164Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:36:34.169Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:43:27.721Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:43:30.650Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:45:31.356Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:45:33.507Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:45:51.202Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:45:53.235Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:46:03.259Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:46:05.299Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:46:26.165Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:46:28.403Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:46:55.923Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:46:58.024Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:48:04.370Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:48:06.527Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T11:56:10.743Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T11:56:13.052Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Email or username already exists.","timestamp":"2025-10-22T11:56:17.017Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:04:03.598Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:04:06.737Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Email or username already exists.","timestamp":"2025-10-22T12:04:47.749Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists.","timestamp":"2025-10-22T12:04:47.750Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:07:11.435Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:07:13.563Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Email or username already exists.","timestamp":"2025-10-22T12:07:14.151Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists.","timestamp":"2025-10-22T12:07:14.152Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:07:55.393Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:07:57.522Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"get /api/users/register","timestamp":"2025-10-22T12:08:02.574Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Email or username already exists.","timestamp":"2025-10-22T12:08:03.174Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists.","timestamp":"2025-10-22T12:08:03.175Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:09:10.781Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:09:13.370Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"get /api/users/register","timestamp":"2025-10-22T12:09:14.562Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists.","timestamp":"2025-10-22T12:09:15.155Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:12:39.608Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:12:41.649Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:22:49.980Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:22:52.865Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:26:29.556Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:26:31.629Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:28:15.030Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:28:19.828Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:28:36.159Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:28:38.331Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:32:09.391Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/register","timestamp":"2025-10-22T12:32:10.554Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:32:11.701Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"User registered: johndoer (johndoer@example.com)","timestamp":"2025-10-22T12:32:13.605Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:36:50.169Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/register","timestamp":"2025-10-22T12:36:50.304Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:36:52.766Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists. at 2025-10-22T12:36:53.340Z","timestamp":"2025-10-22T12:36:53.340Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"confirmPassword\" must be [ref:password]","timestamp":"2025-10-22T12:37:12.908Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:39:24.603Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:39:26.641Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"confirmPassword\" must be [ref:password]","timestamp":"2025-10-22T12:39:28.339Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"confirmPassword\" must be [ref:password]","timestamp":"2025-10-22T12:39:47.977Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"confirmPassword\" must be [ref:password]","timestamp":"2025-10-22T12:44:01.938Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/register","timestamp":"2025-10-22T12:44:19.707Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists. at 2025-10-22T12:44:23.093Z","timestamp":"2025-10-22T12:44:23.093Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"confirmPassword\" must be [ref:password]","timestamp":"2025-10-22T12:45:49.861Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/register","timestamp":"2025-10-22T12:46:11.139Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Registration error: Email or username already exists. at 2025-10-22T12:46:11.713Z","timestamp":"2025-10-22T12:46:11.713Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:48:16.005Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:48:17.968Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:48:39.176Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:48:41.222Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/login","timestamp":"2025-10-22T12:48:48.526Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-22T12:48:49.220Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"email\" must be a valid email","timestamp":"2025-10-22T12:49:06.740Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/login","timestamp":"2025-10-22T12:49:42.190Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-22T12:49:42.812Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:51:51.054Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:51:53.569Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T12:51:59.221Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"POST /api/users/login","timestamp":"2025-10-22T12:51:59.224Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-22T12:51:59.894Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T12:52:11.483Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Validation error: \"email\" must be a valid email","timestamp":"2025-10-22T12:52:11.486Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:53:50.729Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:53:52.805Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Route not found: POST /api/users/login/9090","timestamp":"2025-10-22T12:53:59.221Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T12:54:29.074Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T12:54:31.139Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T13:01:05.191Z"}
{"level":"\u001b[32minfo\u001b[39m","message":"Database connection successful!","timestamp":"2025-10-22T13:01:07.859Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T13:05:56.076Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T13:05:58.042Z"}
{"level":"info","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T13:06:03.857Z"}
{"level":"error","message":"Validation error: \"email\" must be a valid email","timestamp":"2025-10-22T13:06:03.861Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T13:06:55.275Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T13:06:57.277Z"}
{"level":"error","message":"Validation error: \"email\" must be a valid email","timestamp":"2025-10-22T13:06:57.281Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T13:06:57.778Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T13:07:04.833Z"}
{"level":"error","message":"Validation error: \"email\" must be a valid email","timestamp":"2025-10-22T13:07:04.833Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-22T13:08:57.119Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-22T13:08:57.120Z"}
{"level":"info","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-22T13:09:00.127Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:08:25.599Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:08:28.554Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:08:32.372Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:08:34.510Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:15:44.433Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:15:47.238Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:21:37.177Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:21:40.008Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:23:35.752Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:23:37.913Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-22T14:25:45.897Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-22T14:25:48.036Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T07:19:12.281Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T07:19:15.181Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T07:21:49.838Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T07:21:49.842Z"}
{"level":"info","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-23T07:21:50.825Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T07:32:19.979Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T07:32:19.980Z"}
{"level":"info","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-23T07:32:22.778Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T08:05:22.913Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T08:05:26.064Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T08:05:44.435Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T08:05:44.439Z"}
{"level":"info","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-23T08:05:45.494Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:27:41.868Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T10:27:44.855Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:39:29.431Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T10:39:32.223Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T10:40:55.839Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T10:40:55.845Z"}
{"level":"info","message":"User logged in: johndoe (john@example.com)","timestamp":"2025-10-23T10:40:57.932Z"}
{"level":"warn","message":"API HiT: checkRole middleware for role 'admin'","timestamp":"2025-10-23T10:51:11.931Z"}
{"level":"warn","message":"API HiT: checkRole middleware for role 'admin'","timestamp":"2025-10-23T10:51:11.936Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:51:11.951Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T10:51:14.435Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:53:02.859Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T10:53:04.843Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T10:53:09.244Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:53:41.783Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T10:53:43.899Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T10:53:45.083Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T10:53:45.083Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:57:48.355Z"}
{"clientVersion":"6.17.1","errorCode":"P1001","level":"error","message":"Failed to start server: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.\n    at r (F:\\Devops\\01\\social-media\\src\\generated\\prisma\\runtime\\library.js:115:2770)\n    at async startServer (F:\\Devops\\01\\social-media\\src\\index.ts:37:5)","timestamp":"2025-10-23T10:57:53.383Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:58:38.621Z"}
{"clientVersion":"6.17.1","errorCode":"P1001","level":"error","message":"Failed to start server: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.\n    at r (F:\\Devops\\01\\social-media\\src\\generated\\prisma\\runtime\\library.js:115:2770)\n    at async startServer (F:\\Devops\\01\\social-media\\src\\index.ts:37:5)","timestamp":"2025-10-23T10:58:43.653Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T10:59:45.541Z"}
{"clientVersion":"6.17.1","errorCode":"P1001","level":"error","message":"Failed to start server: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.\n    at r (F:\\Devops\\01\\social-media\\src\\generated\\prisma\\runtime\\library.js:115:2770)\n    at async startServer (F:\\Devops\\01\\social-media\\src\\index.ts:37:5)","timestamp":"2025-10-23T10:59:50.561Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:01:13.529Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:01:15.584Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T11:01:19.522Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T11:01:19.523Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T11:01:19.525Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:03:34.572Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T11:03:34.776Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T11:03:34.777Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T11:03:34.778Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:03:37.280Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:10:06.739Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:10:09.162Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:11:09.096Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:11:11.438Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:11:25.214Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:11:25.818Z"}
{"level":"error","message":"Error fetching user: User not found","timestamp":"2025-10-23T11:11:25.819Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:11:32.465Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:11:46.528Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:11:46.534Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:11:47.106Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:11:47.107Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:12:41.995Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:12:41.996Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:12:42.543Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:12:42.543Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:13:05.796Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:13:05.797Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:13:06.346Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:13:06.347Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T11:13:33.466Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T11:13:33.467Z"}
{"level":"error","message":"Email or username already exists.","timestamp":"2025-10-23T11:13:34.339Z"}
{"level":"error","message":"Registration error: Email or username already exists. at 2025-10-23T11:13:34.340Z","timestamp":"2025-10-23T11:13:34.340Z"}
{"level":"error","message":"Email or username already exists.","timestamp":"2025-10-23T11:13:34.340Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:13:49.630Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:13:49.631Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:13:50.173Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:13:50.173Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:14:00.614Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:14:00.615Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:14:00.963Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:14:00.963Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:14:09.714Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:14:09.715Z"}
{"level":"info","message":"User logged in: johndoer (johndoer@example.com)","timestamp":"2025-10-23T11:14:11.525Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:14:40.405Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:14:40.406Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T11:14:41.037Z"}
{"level":"error","message":"Login failed: Invalid email or password.","timestamp":"2025-10-23T11:14:41.037Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T11:14:55.488Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T11:14:55.489Z"}
{"level":"info","message":"User logged in: johndoer (johndoer@example.com)","timestamp":"2025-10-23T11:14:56.526Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T11:15:28.371Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T11:15:28.371Z"}
{"level":"info","message":"User Roles: [\"User\"]","timestamp":"2025-10-23T11:15:28.371Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:15:57.325Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:16:04.520Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:16:53.861Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:16:56.391Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:17:06.792Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:17:06.833Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:17:09.522Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:17:09.526Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:17:23.125Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:17:23.391Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:19:54.548Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:19:56.713Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:21:32.348Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:21:34.421Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:22:16.649Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:22:19.178Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:22:23.946Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:22:23.964Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:26:36.977Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:27:24.603Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:27:24.871Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:31:37.694Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:34:56.376Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:34:58.688Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:37:53.645Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:37:56.141Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:38:00.547Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:38:00.564Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:42:00.161Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:42:00.861Z"}
{"level":"info","message":"Fetching user with ID: NaN","timestamp":"2025-10-23T11:42:00.862Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:42:02.601Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:42:02.615Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:42:28.618Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:42:30.650Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:43:11.341Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:43:13.451Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:43:15.752Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:43:28.896Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:43:28.910Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:44:13.107Z"}
{"level":"error","message":"Error fetching user: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:110:34\n\n  107 };\n  108 \n  109 export const getUserById = async (userId: number) => {\n→ 110   const user = await prisma.user.findUnique({\n          where: {\n        +   id: Int\n          },\n          select: {\n            id: true,\n            username: true,\n            email: true,\n            fullName: true,\n            bio: true,\n            profilePicture: true,\n            createdAt: true\n          }\n        })\n\nArgument `id` is missing.","timestamp":"2025-10-23T11:44:13.387Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T11:47:21.728Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T11:47:24.208Z"}
{"level":"info","message":"GET /api/users/me","timestamp":"2025-10-23T11:47:41.244Z"}
{"level":"info","message":"GET /api/users/me","timestamp":"2025-10-23T11:47:54.298Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T11:48:02.579Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T11:48:02.580Z"}
{"level":"info","message":"User Roles: [\"User\"]","timestamp":"2025-10-23T11:48:02.581Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T11:48:10.244Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T13:47:49.605Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T13:49:08.216Z"}
{"level":"error","message":"User not found","timestamp":"2025-10-23T13:49:09.393Z"}
{"level":"error","message":"Error fetching user: User not found","timestamp":"2025-10-23T13:49:09.394Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T13:49:23.013Z"}
{"level":"info","message":"GET /api/users/:id","timestamp":"2025-10-23T13:49:33.025Z"}
{"level":"info","message":"GET /api/users/me","timestamp":"2025-10-23T13:49:37.231Z"}
{"level":"error","message":"Route not found: GET /api/users/me/123","timestamp":"2025-10-23T13:49:45.527Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T13:52:33.060Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T13:52:33.065Z"}
{"level":"info","message":"User registered: imam01 (imam@example.com)","timestamp":"2025-10-23T13:52:35.673Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T13:52:57.644Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T13:52:57.645Z"}
{"level":"error","message":"Login failed: \nInvalid `prisma.user.findUnique()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:57:34\n\n  54 \n  55 export const loginUser = async (email: string, password: string) => {\n  56   // Cari user berdasarkan email\n→ 57   const user = await prisma.user.findUnique(\nCan't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","timestamp":"2025-10-23T13:53:02.665Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T13:53:31.925Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T13:53:34.951Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T13:53:37.494Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T13:53:37.497Z"}
{"level":"info","message":"User logged in: imam01 (imam@example.com)","timestamp":"2025-10-23T13:53:38.698Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:06:35.901Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T14:06:38.972Z"}
{"level":"warn","message":"API Call: POST /api/users/login","timestamp":"2025-10-23T14:06:39.926Z"}
{"level":"info","message":"POST /api/users/login","timestamp":"2025-10-23T14:06:39.929Z"}
{"level":"info","message":"User logged in: imam01 (imam@example.com)","timestamp":"2025-10-23T14:06:43.585Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T14:07:34.534Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T14:07:34.536Z"}
{"level":"error","message":"Registration error: Email or username already exists. at 2025-10-23T14:07:35.385Z","timestamp":"2025-10-23T14:07:35.385Z"}
{"level":"error","message":"Email or username already exists.","timestamp":"2025-10-23T14:07:35.385Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T14:07:44.303Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T14:07:44.304Z"}
{"level":"error","message":"Registration error: Default 'user' role not found. Please check your database. at 2025-10-23T14:07:46.347Z","timestamp":"2025-10-23T14:07:46.347Z"}
{"level":"error","message":"Registration failed: Default 'user' role not found. Please check your database.","timestamp":"2025-10-23T14:07:46.348Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:08:29.953Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T14:08:32.219Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T14:08:33.968Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T14:08:33.972Z"}
{"level":"info","message":"User registered: imam02 (imam02@example.com)","timestamp":"2025-10-23T14:08:40.043Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:19:22.217Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T14:19:25.399Z"}
{"level":"warn","message":"API Call: POST /api/users/register","timestamp":"2025-10-23T14:19:38.190Z"}
{"level":"info","message":"POST /api/users/register","timestamp":"2025-10-23T14:19:38.198Z"}
{"level":"info","message":"New user registered: imam03 (imam03@example.com)","timestamp":"2025-10-23T14:19:46.432Z"}
{"level":"info","message":"User registered: imam03 (imam03@example.com)","timestamp":"2025-10-23T14:19:46.433Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T14:22:53.881Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T14:22:53.882Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T14:22:53.883Z"}
{"level":"info","message":"GET /api/users","timestamp":"2025-10-23T14:22:53.883Z"}
{"level":"error","message":"Route not found: GET /api/users/6/role","timestamp":"2025-10-23T14:23:36.268Z"}
{"level":"warn","message":"API Call: PATCH /api/users/6/role","timestamp":"2025-10-23T14:23:51.224Z"}
{"level":"info","message":"Request Method: PATCH, Request URL: /api/users/6/role","timestamp":"2025-10-23T14:23:51.224Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T14:23:51.224Z"}
{"level":"info","message":"PATCH /api/users/:id/role","timestamp":"2025-10-23T14:23:51.225Z"}
{"level":"info","message":"Updated user 6 role to Admin","timestamp":"2025-10-23T14:23:56.173Z"}
{"level":"warn","message":"API Call: PATCH /api/users/6/role","timestamp":"2025-10-23T14:24:14.484Z"}
{"level":"info","message":"Request Method: PATCH, Request URL: /api/users/6/role","timestamp":"2025-10-23T14:24:14.484Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T14:24:14.484Z"}
{"level":"info","message":"PATCH /api/users/:id/role","timestamp":"2025-10-23T14:24:14.485Z"}
{"level":"info","message":"Updated user 6 role to User","timestamp":"2025-10-23T14:24:18.738Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:30:26.815Z"}
{"clientVersion":"6.17.1","errorCode":"P1001","level":"error","message":"Failed to start server: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: Can't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.\n    at r (F:\\Devops\\01\\social-media\\src\\generated\\prisma\\runtime\\library.js:115:2770)\n    at async startServer (F:\\Devops\\01\\social-media\\src\\index.ts:37:5)","timestamp":"2025-10-23T14:30:31.850Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:31:07.018Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T14:31:09.141Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T14:31:16.378Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T14:31:16.378Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T14:31:16.379Z"}
{"level":"info","message":"GET /api/users","timestamp":"2025-10-23T14:31:16.379Z"}
{"level":"info","message":"PATCH /api/users/me","timestamp":"2025-10-23T14:36:41.479Z"}
{"level":"error","message":"Error updating profile: \nInvalid `prisma.user.findFirst()` invocation in\nF:\\Devops\\01\\social-media\\src\\services\\userService.ts:205:44\n\n  202 export const updateMyProfile = async (userId: number, data: { username?: string; email?: string; bio?: string }) => {\n  203   // Cek jika username atau email sudah digunakan oleh user lain\n  204   if (data.username || data.email) {\n→ 205     const existingUser = await prisma.user.findFirst(\nCan't reach database server at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-winter-surf-ahdpu58m-pooler.c-3.us-east-1.aws.neon.tech:5432`.","timestamp":"2025-10-23T14:36:46.505Z"}
{"level":"info","message":"Server is running on http://localhost:5000","timestamp":"2025-10-23T14:37:27.727Z"}
{"level":"info","message":"Database connection successful!","timestamp":"2025-10-23T14:37:31.314Z"}
{"level":"info","message":"PATCH /api/users/me","timestamp":"2025-10-23T14:37:35.596Z"}
{"level":"info","message":"Updating profile for user 1","timestamp":"2025-10-23T14:37:39.692Z"}
{"level":"warn","message":"API Call: GET /api/users?page=1&limit=5","timestamp":"2025-10-23T14:37:56.340Z"}
{"level":"info","message":"Request Method: GET, Request URL: /api/users?page=1&limit=5","timestamp":"2025-10-23T14:37:56.341Z"}
{"level":"info","message":"User Roles: [\"Admin\"]","timestamp":"2025-10-23T14:37:56.342Z"}
{"level":"info","message":"GET /api/users","timestamp":"2025-10-23T14:37:56.343Z"}
{"level":"info","message":"PATCH /api/users/me","timestamp":"2025-10-23T14:39:03.426Z"}
{"level":"info","message":"Updating profile for user 1","timestamp":"2025-10-23T14:39:05.486Z"}
